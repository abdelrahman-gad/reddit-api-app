{"id":"redditapi.js","dependencies":[{"name":"E:\\web\\js\\javascript-projects\\js_api_projects\\reddit-search-api\\package.json","includedInParent":true,"mtime":1556843379678}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = {\n  /**\r\n   * @description this object dealing with the reddit api usin fetch api\r\n   * @see {@link http://www.reddit.com }\r\n   * @this\r\n   * @name search \r\n   * @param  {string}  searchTerm   represents the word term user is looking for \r\n   * @param  {number} searchLimit   the number of search result reflect back from the api\r\n   * @param {string}   sortBy       the priority of sorting by latest posts or revelancy\r\n   * @method \r\n   * @returns {Array<Object>}       each object contains bunch of properties  {title , name ,image}   like so \r\n   */\n  search: function search(searchTerm, searchLimit, sortBy) {\n    return fetch(\"http://www.reddit.com/search.json?q=\".concat(searchTerm, \"&sort=\").concat(sortBy, \"&limit=\").concat(searchLimit)).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      return data.data.children.map(function (data) {\n        return data.data;\n      });\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }\n};\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":15},"source":"redditapi.js","original":{"line":1,"column":15}},{"generated":{"line":8,"column":0},"source":"redditapi.js","original":{"line":2,"column":4}},{"name":"search","generated":{"line":19,"column":0},"source":"redditapi.js","original":{"line":13,"column":4}},{"name":"search","generated":{"line":19,"column":2},"source":"redditapi.js","original":{"line":13,"column":4}},{"generated":{"line":19,"column":8},"source":"redditapi.js","original":{"line":13,"column":10}},{"generated":{"line":19,"column":10},"source":"redditapi.js","original":{"line":13,"column":12}},{"name":"searchTerm","generated":{"line":19,"column":26},"source":"redditapi.js","original":{"line":13,"column":21}},{"generated":{"line":19,"column":36},"source":"redditapi.js","original":{"line":13,"column":12}},{"name":"searchLimit","generated":{"line":19,"column":38},"source":"redditapi.js","original":{"line":13,"column":33}},{"generated":{"line":19,"column":49},"source":"redditapi.js","original":{"line":13,"column":12}},{"name":"sortBy","generated":{"line":19,"column":51},"source":"redditapi.js","original":{"line":13,"column":46}},{"generated":{"line":19,"column":57},"source":"redditapi.js","original":{"line":13,"column":12}},{"generated":{"line":19,"column":59},"source":"redditapi.js","original":{"line":13,"column":54}},{"generated":{"line":20,"column":0},"source":"redditapi.js","original":{"line":14,"column":6}},{"name":"fetch","generated":{"line":20,"column":11},"source":"redditapi.js","original":{"line":14,"column":13}},{"generated":{"line":20,"column":16},"source":"redditapi.js","original":{"line":14,"column":18}},{"name":"searchTerm","generated":{"line":20,"column":63},"source":"redditapi.js","original":{"line":15,"column":47}},{"generated":{"line":20,"column":73},"source":"redditapi.js","original":{"line":14,"column":18}},{"name":"sortBy","generated":{"line":20,"column":92},"source":"redditapi.js","original":{"line":15,"column":66}},{"generated":{"line":20,"column":98},"source":"redditapi.js","original":{"line":14,"column":18}},{"name":"searchLimit","generated":{"line":20,"column":118},"source":"redditapi.js","original":{"line":15,"column":82}},{"generated":{"line":20,"column":129},"source":"redditapi.js","original":{"line":14,"column":18}},{"generated":{"line":20,"column":131},"source":"redditapi.js","original":{"line":14,"column":13}},{"name":"then","generated":{"line":20,"column":132},"source":"redditapi.js","original":{"line":17,"column":9}},{"generated":{"line":20,"column":136},"source":"redditapi.js","original":{"line":14,"column":13}},{"generated":{"line":20,"column":137},"source":"redditapi.js","original":{"line":17,"column":14}},{"name":"res","generated":{"line":20,"column":147},"source":"redditapi.js","original":{"line":17,"column":14}},{"generated":{"line":20,"column":150},"source":"redditapi.js","original":{"line":17,"column":17}},{"generated":{"line":21,"column":0},"source":"redditapi.js","original":{"line":17,"column":17}},{"name":"res","generated":{"line":21,"column":13},"source":"redditapi.js","original":{"line":17,"column":21}},{"generated":{"line":21,"column":16},"source":"redditapi.js","original":{"line":17,"column":24}},{"name":"json","generated":{"line":21,"column":17},"source":"redditapi.js","original":{"line":17,"column":25}},{"generated":{"line":21,"column":21},"source":"redditapi.js","original":{"line":17,"column":21}},{"generated":{"line":21,"column":23},"source":"redditapi.js","original":{"line":17,"column":17}},{"generated":{"line":22,"column":0},"source":"redditapi.js","original":{"line":17,"column":17}},{"generated":{"line":22,"column":5},"source":"redditapi.js","original":{"line":14,"column":13}},{"name":"then","generated":{"line":22,"column":7},"source":"redditapi.js","original":{"line":18,"column":9}},{"generated":{"line":22,"column":11},"source":"redditapi.js","original":{"line":14,"column":13}},{"generated":{"line":22,"column":12},"source":"redditapi.js","original":{"line":18,"column":14}},{"name":"data","generated":{"line":22,"column":22},"source":"redditapi.js","original":{"line":18,"column":14}},{"generated":{"line":22,"column":26},"source":"redditapi.js","original":{"line":18,"column":18}},{"generated":{"line":22,"column":28},"source":"redditapi.js","original":{"line":18,"column":22}},{"generated":{"line":23,"column":0},"source":"redditapi.js","original":{"line":19,"column":10}},{"name":"data","generated":{"line":23,"column":13},"source":"redditapi.js","original":{"line":19,"column":17}},{"generated":{"line":23,"column":17},"source":"redditapi.js","original":{"line":19,"column":21}},{"name":"data","generated":{"line":23,"column":18},"source":"redditapi.js","original":{"line":19,"column":22}},{"generated":{"line":23,"column":22},"source":"redditapi.js","original":{"line":19,"column":17}},{"name":"children","generated":{"line":23,"column":23},"source":"redditapi.js","original":{"line":19,"column":27}},{"generated":{"line":23,"column":31},"source":"redditapi.js","original":{"line":19,"column":17}},{"name":"map","generated":{"line":23,"column":32},"source":"redditapi.js","original":{"line":19,"column":36}},{"generated":{"line":23,"column":35},"source":"redditapi.js","original":{"line":19,"column":17}},{"generated":{"line":23,"column":36},"source":"redditapi.js","original":{"line":19,"column":40}},{"name":"data","generated":{"line":23,"column":46},"source":"redditapi.js","original":{"line":19,"column":40}},{"generated":{"line":23,"column":50},"source":"redditapi.js","original":{"line":19,"column":44}},{"generated":{"line":24,"column":0},"source":"redditapi.js","original":{"line":19,"column":44}},{"name":"data","generated":{"line":24,"column":15},"source":"redditapi.js","original":{"line":19,"column":48}},{"generated":{"line":24,"column":19},"source":"redditapi.js","original":{"line":19,"column":52}},{"name":"data","generated":{"line":24,"column":20},"source":"redditapi.js","original":{"line":19,"column":53}},{"generated":{"line":24,"column":24},"source":"redditapi.js","original":{"line":19,"column":44}},{"generated":{"line":25,"column":0},"source":"redditapi.js","original":{"line":19,"column":44}},{"generated":{"line":25,"column":7},"source":"redditapi.js","original":{"line":19,"column":17}},{"generated":{"line":25,"column":8},"source":"redditapi.js","original":{"line":19,"column":10}},{"generated":{"line":26,"column":0},"source":"redditapi.js","original":{"line":20,"column":9}},{"generated":{"line":26,"column":5},"source":"redditapi.js","original":{"line":14,"column":13}},{"name":"catch","generated":{"line":26,"column":7},"source":"redditapi.js","original":{"line":21,"column":9}},{"generated":{"line":26,"column":12},"source":"redditapi.js","original":{"line":14,"column":13}},{"generated":{"line":26,"column":13},"source":"redditapi.js","original":{"line":21,"column":15}},{"name":"err","generated":{"line":26,"column":23},"source":"redditapi.js","original":{"line":21,"column":15}},{"generated":{"line":26,"column":26},"source":"redditapi.js","original":{"line":21,"column":18}},{"generated":{"line":27,"column":0},"source":"redditapi.js","original":{"line":21,"column":18}},{"name":"console","generated":{"line":27,"column":13},"source":"redditapi.js","original":{"line":21,"column":22}},{"generated":{"line":27,"column":20},"source":"redditapi.js","original":{"line":21,"column":29}},{"name":"log","generated":{"line":27,"column":21},"source":"redditapi.js","original":{"line":21,"column":30}},{"generated":{"line":27,"column":24},"source":"redditapi.js","original":{"line":21,"column":22}},{"name":"err","generated":{"line":27,"column":25},"source":"redditapi.js","original":{"line":21,"column":34}},{"generated":{"line":27,"column":28},"source":"redditapi.js","original":{"line":21,"column":22}},{"generated":{"line":27,"column":29},"source":"redditapi.js","original":{"line":21,"column":18}},{"generated":{"line":28,"column":0},"source":"redditapi.js","original":{"line":21,"column":18}},{"generated":{"line":28,"column":5},"source":"redditapi.js","original":{"line":14,"column":13}},{"generated":{"line":28,"column":6},"source":"redditapi.js","original":{"line":14,"column":6}},{"generated":{"line":29,"column":0},"source":"redditapi.js","original":{"line":22,"column":5}},{"generated":{"line":30,"column":0},"source":"redditapi.js","original":{"line":1,"column":15}}],"sources":{"redditapi.js":"export default {\r\n    /**\r\n     * @description this object dealing with the reddit api usin fetch api\r\n     * @see {@link http://www.reddit.com }\r\n     * @this\r\n     * @name search \r\n     * @param  {string}  searchTerm   represents the word term user is looking for \r\n     * @param  {number} searchLimit   the number of search result reflect back from the api\r\n     * @param {string}   sortBy       the priority of sorting by latest posts or revelancy\r\n     * @method \r\n     * @returns {Array<Object>}       each object contains bunch of properties  {title , name ,image}   like so \r\n     */\r\n    search: function(searchTerm, searchLimit, sortBy) {\r\n      return fetch(\r\n        `http://www.reddit.com/search.json?q=${searchTerm}&sort=${sortBy}&limit=${searchLimit}`\r\n      )\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          return data.data.children.map(data => data.data);\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n  };"},"lineCount":null}},"error":null,"hash":"c6d1f1bfa7291be9200513342c02f13c","cacheData":{"env":{}}}