{"version":3,"sources":["src/js/index.js"],"names":["searchForm","document","getElementById","searchBtn","searchInput","search","searchTerm","searchLimit","sortBy","fetch","then","res","json","data","children","map","catch","err","console","log","handleSubmit","e","querySelector","value","showMessage","results","output","forEach","post","image","preview","images","source","url","title","truncateString","selftext","subreddit","score","innerHTML","addEventListener","preventDefault","message","className","div","createElement","appendChild","createTextNode","searchContainer","insertBefore","setTimeout","remove","myString","limit","shortened","indexOf","substring"],"mappings":"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","file":"js.d818e0ef.js","sourceRoot":"..","sourcesContent":["\r\n/**\r\n * @description catching the html element form#search-form  and asssigning it to a DOM object\r\n * @const\r\n * @name searchForm\r\n * @type {Object} DOM object\r\n */\r\nconst searchForm = document.getElementById(\"search-form\");\r\n\r\n/**\r\n * @description catching the html element button#search-btn  and asssigning it to a DOM object\r\n * @const\r\n * @name searchBtn\r\n * @type {Object} DOM object\r\n */\r\nconst searchBtn = document.getElementById(\"search-btn\");\r\n/**\r\n * @description catching the html element form#search-input  and asssigning it to a DOM object\r\n * @const\r\n * @name searchInput\r\n * @type {Object} DOM object\r\n */\r\nconst searchInput = document.getElementById(\"search-input\");\r\n /**\r\n     * @description this object dealing with the reddit api usin fetch api\r\n     * @see {@link http://www.reddit.com }\r\n     * @this reddit  object\r\n     * @name search \r\n     * @param  {string}  searchTerm   represents the word term user is looking for \r\n     * @param  {number} searchLimit   the number of search result reflect back from the api\r\n     * @param {string}   sortBy       the priority of sorting by latest posts or revelancy\r\n     * @function \r\n     * @returns {Array<Object>}       each object contains bunch of properties  {title , name ,image}   like so \r\n     */\r\n    function search(searchTerm, searchLimit, sortBy) {\r\n      return fetch(\r\n        `https://www.reddit.com/search.json?q=${searchTerm}&sort=${sortBy}&limit=${searchLimit}`\r\n      )\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          return data.data.children.map(data => data.data);\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n\r\n/**\r\n * @description thei most important functio it takes the inputs parameters from the {@link searchform}\r\n * then passing the via the url from the method {@link search} then getting the respnse then populate the DOM\r\n * @summary make response/get response /populate the DOM\r\n * @param {Object} event object\r\n * @name handleSubmit\r\n * @function\r\n */\r\nfunction handleSubmit(e) {\r\n  // Get sort\r\n  const sortBy = document.querySelector('input[name=\"sortby\"]:checked').value;\r\n  // Get limit\r\n  const searchLimit = document.getElementById(\"limit\").value;\r\n  // Get search\r\n  const searchTerm = searchInput.value;\r\n  // Check for input\r\n  if (searchTerm == \"\") {\r\n    // Show message\r\n    showMessage(\"Please add a search term\", \"alert-danger\");\r\n  }\r\n  // Clear field\r\n  searchInput.value = \"\";\r\n\r\n  // Search Reddit\r\n  search(searchTerm, searchLimit, sortBy).then(results => {\r\n    let output = '<div class=\"card-columns\">';\r\n    console.log(results);\r\n    results.forEach(post => {\r\n      // Check for image\r\n      let image = post.preview\r\n        ? post.preview.images[0].source.url\r\n        : \"https://cdn.comparitech.com/wp-content/uploads/2017/08/reddit-1.jpg\";\r\n      output += `\r\n            <div class=\"card mb-2\">\r\n            <img class=\"card-img-top\" src=\"${image}\" alt=\"Card image cap\">\r\n            <div class=\"card-body\">\r\n              <h5 class=\"card-title\">${post.title}</h5>\r\n              <p class=\"card-text\">${truncateString(post.selftext, 100)}</p>\r\n              <a href=\"${post.url}\" target=\"_blank\r\n              \" class=\"btn btn-primary\">Read More</a>\r\n              <hr>\r\n              <span class=\"badge badge-secondary\">Subreddit: ${\r\n                post.subreddit\r\n              }</span> \r\n              <span class=\"badge badge-dark\">Score: ${post.score}</span>\r\n            </div>\r\n          </div>\r\n            `;\r\n    });\r\n    output += \"</div>\";\r\n    document.getElementById(\"results\").innerHTML = output;\r\n  });\r\n}\r\n\r\n/**\r\n * @description submit event requesting the url and getting back the response viia the {@link handleSubmit}\r\n * @name submit\r\n * @event\r\n * @param {String} submit the name of event to be\r\n * @param {function} callback callback function takes event object an aparameter\r\n */\r\nsearchForm.addEventListener(\"submit\", e => {\r\n  e.preventDefault();\r\n  handleSubmit(e);\r\n});\r\n\r\n/**\r\n * @description  if the user doesn't enter proper inputs this message gonnea alert reminding him to do\r\n * it also gonna fade seconds after\r\n * @function\r\n * @name showMessage\r\n * @param {String} message text to be shown to the user\r\n * @param {String}  className warning effect is aded to the text\r\n */\r\nfunction showMessage(message, className) {\r\n  // Create div\r\n  const div = document.createElement(\"div\");\r\n  // Add classes\r\n  div.className = `alert ${className}`;\r\n  // Add text\r\n  div.appendChild(document.createTextNode(message));\r\n  // Get parent\r\n  const searchContainer = document.getElementById(\"search-container\");\r\n  // Get form\r\n  const search = document.getElementById(\"search\");\r\n\r\n  // Insert alert\r\n  searchContainer.insertBefore(div, search);\r\n\r\n  // Timeout after 3 sec\r\n  setTimeout(function() {\r\n    document.querySelector(\".alert\").remove();\r\n  }, 3000);\r\n}\r\n\r\n/**\r\n * @description truncating the too long texts\r\n * @name truncateString\r\n * @function\r\n * @param {String} myString  text to be truncated  in case it is too long to show\r\n * @param {Number} limit     the maximum letters length to be truncated (index to truncate from)\r\n * @returns {String}   trancated string fitting to be shown\r\n */\r\nfunction truncateString(myString, limit) {\r\n  const shortened = myString.indexOf(\" \", limit);\r\n  if (shortened == -1) return myString;\r\n  return myString.substring(0, shortened);\r\n}\r\n"]}